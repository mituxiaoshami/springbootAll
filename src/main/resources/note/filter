/**
 * @Author: sea
 * @Description: filter 的作用
 * @Date: 19:14 2017/8/24
 */

 Filter也称之为过滤器，它是Servlet技术中最实用的技术,Web开发人员通过Filter技术，对Web服务器管理的所有web资源:例如JSP、Servlet、静态图片或静态html等进行拦截，
 从而实现一些特殊的功能。
 例:实现URL级别的权限访问控制、过滤敏感词汇、压缩响应信息等一些高级功能。

 主要用途:对用户请求进行预处理，也可以对HttpServletResponse进行后处理

 完整流程:Filter对用户请求进行预处理-------->将请求交给Servlet进行处理并生成响应------->Filter再对服务器响应进行后处理

 功能:  在HttpServletRequest到达Servlet之前，拦截客户的HttpServletRequest。并根据需要检查HttpServletRequest,也可以修改HttpServletRequest头和数据
        在HttpServletResponse到达客户端之前，拦截HttpServletResponse 。根据需要检查HttpServletResponse，也可以修改HttpServletResponse头和数据

 Filter链: 在一个web应用中，可以开发编写多个Filter，这些Filter组合起来称之为一个Filter链。

 web服务器根据Filter注册顺序，决定先调用哪个Filter，当第一个Filter的doFilter方法被调用时，web服务器会创建一个代表Filter链的FilterChain对象传递给该方法。
 在doFilter方法中，开发人员如果调用了FilterChain对象的doFilter方法，则web服务器会检查FilterChain对象中是否还有filter，如果有，则调用第2个filter，如果没有，则调用目标资源。

 Filter的生命周期:

 public void init(FilterConfig filterConfig) throws ServletException;//初始化
 public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException;//拦截请求
 这个方法完成实际的过滤操作。当客户请求访问与过滤器关联的URL的时候，Servlet过滤器将先执行doFilter方法。FilterChain参数用于访问后续过滤器。
 public void destroy();//销毁
 Filter对象创建后会驻留在内存，当web应用移除或服务器停止时才销毁。在Web容器卸载 Filter 对象之前被调用。该方法在Filter的生命周期中仅执行一次。在这个方法中，可以释放过滤器使用的资源。


 FilterConfig接口:
 用户在配置filter时，可以使用为filter配置一些初始化参数，当web容器实例化Filter对象，调用其init方法时，会把封装了filter初始化参数的filterConfig对象传递进来。因此开发人员在编写filter时，通过filterConfig对象的方法，就可获得以下内容：

 String getFilterName();//得到filter的名称。
 String getInitParameter(String name);//返回在部署描述中指定名称的初始化参数的值。如果不存在返回null.
 Enumeration getInitParameterNames();//返回过滤器的所有初始化参数的名字的枚举集合。
 public ServletContext getServletContext();//返回Servlet上下文对象的引用。

 具体Filter怎么使用的看项目中的:------------SessionFilterConfig